{"version":3,"file":"static/js/395.93f45321.chunk.js","mappings":"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","sources":["components/pages/Admin/FutureProperties/List.jsx","components/pages/Admin/Api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../Api';\r\n\r\nconst FutureDevelopmentList = () => {\r\n  const [developments, setDevelopments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchDevelopments = async () => {\r\n      try {\r\n        const response = await api.futureDevelopments.getAll();\r\n        // Ensure we're working with an array\r\n        const data = Array.isArray(response.data) ? response.data : [];\r\n        setDevelopments(data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message || 'Failed to load future developments');\r\n        setLoading(false);\r\n        setDevelopments([]); // Ensure developments is set to empty array on error\r\n      }\r\n    };\r\n    fetchDevelopments();\r\n  }, []);\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this future development?')) {\r\n      try {\r\n        await api.futureDevelopments.delete(id);\r\n        setDevelopments(developments.filter(dev => dev.id !== id));\r\n      } catch (err) {\r\n        setError(err.message || 'Failed to delete development');\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"loading-state\">Loading...</div>;\r\n  if (error) return <div className=\"alert alert-error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"future-dev-container\">\r\n      <div className=\"future-dev-header\">\r\n        <h1 className=\"future-dev-title\">Future Developments</h1>\r\n        <Link to=\"/admin/future-developments/add\" className=\"btn btn-primary\">\r\n          Add New Development\r\n        </Link>\r\n      </div>\r\n\r\n      <table className=\"future-dev-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Location</th>\r\n            <th>Start Date</th>\r\n            <th>Completion</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {developments.length > 0 ? (\r\n            developments.map(dev => (\r\n              <tr key={dev.id}>\r\n                <td>{dev.title}</td>\r\n                <td>{dev.location}</td>\r\n                <td>{new Date(dev.expected_start).toLocaleDateString()}</td>\r\n                <td>{new Date(dev.expected_completion).toLocaleDateString()}</td>\r\n                <td>\r\n                  <Link \r\n                    to={`/admin/future-developments/edit/${dev.id}`}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    Edit\r\n                  </Link>\r\n                  <button \r\n                    onClick={() => handleDelete(dev.id)}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"5\" className=\"text-center\">No developments found</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FutureDevelopmentList;","import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: 10000,\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst ApiService = {\r\n  // Authentication\r\n  auth: {\r\n    login: (credentials) => api.post('/auth/login/', credentials),\r\n    register: (userData) => api.post('/auth/register/', userData),\r\n    refreshToken: (refreshToken) => api.post('/auth/refresh/', { refresh: refreshToken }),\r\n    logout: () => api.post('/auth/logout/'),\r\n    getMe: () => api.get('/auth/me/'),\r\n  },\r\n\r\n  // Properties\r\n  properties: {\r\n    getAll: (params = {}) => api.get('/properties/', { params }),\r\n    getById: (id) => api.get(`/properties/${id}/`),\r\n    create: (propertyData) => api.post('/properties/', propertyData),\r\n    update: (id, propertyData) => api.patch(`/properties/${id}/`, propertyData),\r\n    delete: (id) => api.delete(`/properties/${id}/`),\r\n    uploadImages: (id, images) => {\r\n      const formData = new FormData();\r\n      Array.from(images).forEach((image) => {\r\n        formData.append('images', image);\r\n      });\r\n      return api.post(`/properties/${id}/images/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n    },\r\n    deleteImage: (propertyId, imageId) => \r\n      api.delete(`/properties/${propertyId}/images/${imageId}/`)\r\n  },\r\n\r\n  // Upcoming Properties\r\n  upcomingProperties: {\r\n    getAll: (params = {}) => api.get('/upcoming-properties/', { params }),\r\n    getById: (id) => api.get(`/upcoming-properties/${id}/`),\r\n    create: (propertyData) => api.post('/upcoming-properties/', propertyData),\r\n    update: (id, propertyData) => api.patch(`/upcoming-properties/${id}/`, propertyData),\r\n    delete: (id) => api.delete(`/upcoming-properties/${id}/`),\r\n    uploadImages: (id, images) => {\r\n      const formData = new FormData();\r\n      Array.from(images).forEach((image) => {\r\n        formData.append('images', image);\r\n      });\r\n      return api.post(`/upcoming-properties/${id}/images/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n    },\r\n    deleteImage: (propertyId, imageId) => \r\n      api.delete(`/upcoming-properties/${propertyId}/images/${imageId}/`)\r\n  },\r\n\r\n  // Future Developments\r\n  futureDevelopments: {\r\n    getAll: (params = {}) => api.get('/future-developments/', { params }),\r\n    getById: (id) => api.get(`/future-developments/${id}/`),\r\n    create: (developmentData) => api.post('/future-developments/', developmentData),\r\n    update: (id, developmentData) => api.patch(`/future-developments/${id}/`, developmentData),\r\n    delete: (id) => api.delete(`/future-developments/${id}/`),\r\n    uploadImages: (id, images) => {\r\n      const formData = new FormData();\r\n      Array.from(images).forEach((image) => {\r\n        formData.append('images', image);\r\n      });\r\n      return api.post(`/future-developments/${id}/images/`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n    },\r\n    deleteImage: (developmentId, imageId) => \r\n      api.delete(`/future-developments/${developmentId}/images/${imageId}/`)\r\n  },\r\n\r\n  // Users\r\n  users: {\r\n    getAll: (params = {}) => api.get('/users/', { params }),\r\n    getById: (id) => api.get(`/users/${id}/`),\r\n    update: (id, userData) => api.patch(`/users/${id}/`, userData),\r\n    delete: (id) => api.delete(`/users/${id}/`),\r\n  }\r\n};\r\n\r\n// Add direct method aliases for easier access\r\nApiService.getProperties = ApiService.properties.getAll;\r\nApiService.getProperty = ApiService.properties.getById;\r\nApiService.createProperty = ApiService.properties.create;\r\nApiService.updateProperty = ApiService.properties.update;\r\nApiService.deleteProperty = ApiService.properties.delete;\r\nApiService.uploadPropertyImages = ApiService.properties.uploadImages;\r\nApiService.deletePropertyImage = ApiService.properties.deleteImage;\r\n\r\nexport default ApiService;"],"names":["FutureDevelopmentList","developments","setDevelopments","useState","loading","setLoading","error","setError","useEffect","async","response","api","futureDevelopments","getAll","data","Array","isArray","err","message","fetchDevelopments","_jsx","className","children","_jsxs","Link","to","length","map","dev","title","location","Date","expected_start","toLocaleDateString","expected_completion","concat","id","onClick","window","confirm","delete","filter","handleDelete","colSpan","API_BASE_URL","process","REACT_APP_API_URL","axios","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","Promise","reject","_error$response","status","removeItem","href","ApiService","auth","login","credentials","post","register","userData","refreshToken","refresh","logout","getMe","get","properties","params","arguments","undefined","getById","propertyData","update","patch","uploadImages","images","formData","FormData","from","forEach","image","append","deleteImage","propertyId","imageId","upcomingProperties","developmentData","developmentId","users","getProperties","getProperty","createProperty","updateProperty","deleteProperty","uploadPropertyImages","deletePropertyImage"],"sourceRoot":""}